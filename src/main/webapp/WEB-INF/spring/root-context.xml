<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		* root-context.xml
		  서버구동과 동시에 web.xml을 거쳐서 바로 로딩(pre-loading)되는 문서
		  => 서버구동과 동시에 바로 세팅해야되는 내용들을 작성하면 됨
		     주로 DB연결설정, 트랜잭션처리, 내외부 보듈연동 등등 
	 -->
	 
	 <!-- 
	 	 * 스프링 특징 중 IOC, DI
	 	 - 스프링이 모든 객체의 생명주기를 관리한다 (IOC)
	 	 - 의존성 주입으로 스프링이 생성해둔 객체를 주입받아서 사용 (DI)
	 	 
	 	 => 스프링이 관리해야되는 객체의 클래스들을 "빈"으로 등록해야됨
	 	 
	 	 * 특정 클래스를 빈으로 등록하는 방법
	 	 1) xml방식
	 	 2) 어노테이션방식
	 	  
	 	 내가 등록하고자 하는 클래스가 외부 클래스(내가만든클래스가아닌)일 경우 xml방식으로만 등록이 가능
	 	 
	  -->
	  
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="spring" />
		<property name="password" value="spring" />	
	</bean>
	  
	<!-- 
  		BasicDataSource dataSource = new BasicDataSource();
  		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
  		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
  		dataSource.setUsername("spring");
  		dataSource.setPassword("spring");
	-->
	   
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
   		<property name="dataSource" ref="dataSource" />
	</bean>
	    
	<!-- 
    	SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
    	sqlSessionFactory.setConfigLocation(classpath:config/mybatis-config.xml);
    	sqlSessionFactory.setDataSource(dataSource);
	 -->
	 
	 <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
	 	<constructor-arg ref="sqlSessionFactory" />
	 </bean>
	 
	 <!-- 
	 	SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	  -->
	     
	     
	
</beans>
